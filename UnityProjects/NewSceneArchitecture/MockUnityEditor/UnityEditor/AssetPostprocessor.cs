using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;


namespace UnityEditor {
public class AssetPostprocessor {
	// Mock data:
	private Dictionary<string, int> m_functionCallCounts;
	public Dictionary<string, int> FunctionCallCounts {
		get { 
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			return m_functionCallCounts;
		}
	}

	public void LogWarning( System.String warning ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void LogWarning(System.String)" )){
			m_functionCallCounts.Add( "Void LogWarning(System.String)", 0 );
		}
		m_functionCallCounts["Void LogWarning(System.String)"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public void LogWarning( System.String warning, UnityEngine.Object context ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void LogWarning(System.String, UnityEngine.Object)" )){
			m_functionCallCounts.Add( "Void LogWarning(System.String, UnityEngine.Object)", 0 );
		}
		m_functionCallCounts["Void LogWarning(System.String, UnityEngine.Object)"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public void LogError( System.String warning ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void LogError(System.String)" )){
			m_functionCallCounts.Add( "Void LogError(System.String)", 0 );
		}
		m_functionCallCounts["Void LogError(System.String)"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public void LogError( System.String warning, UnityEngine.Object context ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void LogError(System.String, UnityEngine.Object)" )){
			m_functionCallCounts.Add( "Void LogError(System.String, UnityEngine.Object)", 0 );
		}
		m_functionCallCounts["Void LogError(System.String, UnityEngine.Object)"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public virtual System.Int32 GetPostprocessOrder( ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Int32 GetPostprocessOrder()" )){
			m_functionCallCounts.Add( "Int32 GetPostprocessOrder()", 0 );
		}
		m_functionCallCounts["Int32 GetPostprocessOrder()"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public AssetPostprocessor( ){
		//Mock Data:
			m_functionCallCounts = new Dictionary<string, int>();
		if(!m_functionCallCounts.ContainsKey( "Void .ctor()" )){
			m_functionCallCounts.Add( "Void .ctor()", 0 );
		}
		m_functionCallCounts["Void .ctor()"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public System.String assetPath {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_assetPath" )){
				m_functionCallCounts.Add( "get_assetPath", 0 );
			}
			m_functionCallCounts["get_assetPath"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_assetPath" )){
				m_functionCallCounts.Add( "set_assetPath", 0 );
			}
			m_functionCallCounts["set_assetPath"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEditor.AssetImporter assetImporter {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_assetImporter" )){
				m_functionCallCounts.Add( "get_assetImporter", 0 );
			}
			m_functionCallCounts["get_assetImporter"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.Texture2D preview {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_preview" )){
				m_functionCallCounts.Add( "get_preview", 0 );
			}
			m_functionCallCounts["get_preview"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_preview" )){
				m_functionCallCounts.Add( "set_preview", 0 );
			}
			m_functionCallCounts["set_preview"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}
}
}
