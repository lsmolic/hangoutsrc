using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;


namespace UnityEditor {
public class ModelImporter : UnityEditor.AssetImporter {
	// Mock data:
	private Dictionary<string, int> m_functionCallCounts;
	public Dictionary<string, int> FunctionCallCounts {
		get { 
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			return m_functionCallCounts;
		}
	}

	public ModelImporter( ){
		//Mock Data:
			m_functionCallCounts = new Dictionary<string, int>();
		if(!m_functionCallCounts.ContainsKey( "Void .ctor()" )){
			m_functionCallCounts.Add( "Void .ctor()", 0 );
		}
		m_functionCallCounts["Void .ctor()"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public UnityEditor.ModelImporterGenerateAnimations generateAnimations {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_generateAnimations" )){
				m_functionCallCounts.Add( "get_generateAnimations", 0 );
			}
			m_functionCallCounts["get_generateAnimations"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_generateAnimations" )){
				m_functionCallCounts.Add( "set_generateAnimations", 0 );
			}
			m_functionCallCounts["set_generateAnimations"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEditor.ModelImporterGenerateMaterials generateMaterials {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_generateMaterials" )){
				m_functionCallCounts.Add( "get_generateMaterials", 0 );
			}
			m_functionCallCounts["get_generateMaterials"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_generateMaterials" )){
				m_functionCallCounts.Add( "set_generateMaterials", 0 );
			}
			m_functionCallCounts["set_generateMaterials"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean splitTangentsAcrossSeams {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_splitTangentsAcrossSeams" )){
				m_functionCallCounts.Add( "get_splitTangentsAcrossSeams", 0 );
			}
			m_functionCallCounts["get_splitTangentsAcrossSeams"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_splitTangentsAcrossSeams" )){
				m_functionCallCounts.Add( "set_splitTangentsAcrossSeams", 0 );
			}
			m_functionCallCounts["set_splitTangentsAcrossSeams"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Single normalSmoothingAngle {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_normalSmoothingAngle" )){
				m_functionCallCounts.Add( "get_normalSmoothingAngle", 0 );
			}
			m_functionCallCounts["get_normalSmoothingAngle"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_normalSmoothingAngle" )){
				m_functionCallCounts.Add( "set_normalSmoothingAngle", 0 );
			}
			m_functionCallCounts["set_normalSmoothingAngle"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean swapUVChannels {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_swapUVChannels" )){
				m_functionCallCounts.Add( "get_swapUVChannels", 0 );
			}
			m_functionCallCounts["get_swapUVChannels"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_swapUVChannels" )){
				m_functionCallCounts.Add( "set_swapUVChannels", 0 );
			}
			m_functionCallCounts["set_swapUVChannels"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Single globalScale {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_globalScale" )){
				m_functionCallCounts.Add( "get_globalScale", 0 );
			}
			m_functionCallCounts["get_globalScale"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_globalScale" )){
				m_functionCallCounts.Add( "set_globalScale", 0 );
			}
			m_functionCallCounts["set_globalScale"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEditor.ModelImporterClipAnimation[] clipAnimations {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_clipAnimations" )){
				m_functionCallCounts.Add( "get_clipAnimations", 0 );
			}
			m_functionCallCounts["get_clipAnimations"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_clipAnimations" )){
				m_functionCallCounts.Add( "set_clipAnimations", 0 );
			}
			m_functionCallCounts["set_clipAnimations"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean splitAnimations {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_splitAnimations" )){
				m_functionCallCounts.Add( "get_splitAnimations", 0 );
			}
			m_functionCallCounts["get_splitAnimations"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_splitAnimations" )){
				m_functionCallCounts.Add( "set_splitAnimations", 0 );
			}
			m_functionCallCounts["set_splitAnimations"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean addCollider {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_addCollider" )){
				m_functionCallCounts.Add( "get_addCollider", 0 );
			}
			m_functionCallCounts["get_addCollider"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_addCollider" )){
				m_functionCallCounts.Add( "set_addCollider", 0 );
			}
			m_functionCallCounts["set_addCollider"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean reduceKeyframes {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_reduceKeyframes" )){
				m_functionCallCounts.Add( "get_reduceKeyframes", 0 );
			}
			m_functionCallCounts["get_reduceKeyframes"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_reduceKeyframes" )){
				m_functionCallCounts.Add( "set_reduceKeyframes", 0 );
			}
			m_functionCallCounts["set_reduceKeyframes"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean recalculateNormals {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_recalculateNormals" )){
				m_functionCallCounts.Add( "get_recalculateNormals", 0 );
			}
			m_functionCallCounts["get_recalculateNormals"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_recalculateNormals" )){
				m_functionCallCounts.Add( "set_recalculateNormals", 0 );
			}
			m_functionCallCounts["set_recalculateNormals"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean bakeIK {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_bakeIK" )){
				m_functionCallCounts.Add( "get_bakeIK", 0 );
			}
			m_functionCallCounts["get_bakeIK"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_bakeIK" )){
				m_functionCallCounts.Add( "set_bakeIK", 0 );
			}
			m_functionCallCounts["set_bakeIK"]++;
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}
}
}
