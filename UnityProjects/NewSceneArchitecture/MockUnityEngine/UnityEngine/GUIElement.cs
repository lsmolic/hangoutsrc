using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;


namespace UnityEngine {
public class GUIElement : UnityEngine.Behaviour {
	// Mock data:
	private Dictionary<string, int> m_functionCallCounts;
	public Dictionary<string, int> FunctionCallCounts {
		get { 
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			return m_functionCallCounts;
		}
	}

	public System.Boolean HitTest( UnityEngine.Vector3 screenPosition, UnityEngine.Camera camera ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Boolean HitTest(Vector3, UnityEngine.Camera)" )){
			m_functionCallCounts.Add( "Boolean HitTest(Vector3, UnityEngine.Camera)", 0 );
		}
		m_functionCallCounts["Boolean HitTest(Vector3, UnityEngine.Camera)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public System.Boolean HitTest( UnityEngine.Vector3 screenPosition ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Boolean HitTest(Vector3)" )){
			m_functionCallCounts.Add( "Boolean HitTest(Vector3)", 0 );
		}
		m_functionCallCounts["Boolean HitTest(Vector3)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public UnityEngine.Rect GetScreenRect( UnityEngine.Camera camera ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Rect GetScreenRect(UnityEngine.Camera)" )){
			m_functionCallCounts.Add( "Rect GetScreenRect(UnityEngine.Camera)", 0 );
		}
		m_functionCallCounts["Rect GetScreenRect(UnityEngine.Camera)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public UnityEngine.Rect GetScreenRect( ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Rect GetScreenRect()" )){
			m_functionCallCounts.Add( "Rect GetScreenRect()", 0 );
		}
		m_functionCallCounts["Rect GetScreenRect()"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public GUIElement( ){
		//Mock Data:
			m_functionCallCounts = new Dictionary<string, int>();
		if(!m_functionCallCounts.ContainsKey( "Void .ctor()" )){
			m_functionCallCounts.Add( "Void .ctor()", 0 );
		}
		m_functionCallCounts["Void .ctor()"]++;
			
	}
}
}
