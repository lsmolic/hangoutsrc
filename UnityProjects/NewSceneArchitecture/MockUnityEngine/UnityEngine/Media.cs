using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;


namespace UnityEngine {
public class Media {
	// Mock data:
	private Dictionary<string, int> m_functionCallCounts;
	public Dictionary<string, int> FunctionCallCounts {
		get { 
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			return m_functionCallCounts;
		}
	}

	public System.Boolean LoadUrl( System.String url ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Boolean LoadUrl(System.String)" )){
			m_functionCallCounts.Add( "Boolean LoadUrl(System.String)", 0 );
		}
		m_functionCallCounts["Boolean LoadUrl(System.String)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public void FreeUrl( ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void FreeUrl()" )){
			m_functionCallCounts.Add( "Void FreeUrl()", 0 );
		}
		m_functionCallCounts["Void FreeUrl()"]++;
			
	}

	public System.Boolean Play( ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Boolean Play()" )){
			m_functionCallCounts.Add( "Boolean Play()", 0 );
		}
		m_functionCallCounts["Boolean Play()"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public System.Boolean Pause( ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Boolean Pause()" )){
			m_functionCallCounts.Add( "Boolean Pause()", 0 );
		}
		m_functionCallCounts["Boolean Pause()"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public System.Single Seek( System.Single seconds ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Single Seek(Single)" )){
			m_functionCallCounts.Add( "Single Seek(Single)", 0 );
		}
		m_functionCallCounts["Single Seek(Single)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public System.Single Tell( ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Single Tell()" )){
			m_functionCallCounts.Add( "Single Tell()", 0 );
		}
		m_functionCallCounts["Single Tell()"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public System.Boolean Stop( ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Boolean Stop()" )){
			m_functionCallCounts.Add( "Boolean Stop()", 0 );
		}
		m_functionCallCounts["Boolean Stop()"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public void Loop( System.Boolean onOrOff ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void Loop(Boolean)" )){
			m_functionCallCounts.Add( "Void Loop(Boolean)", 0 );
		}
		m_functionCallCounts["Void Loop(Boolean)"]++;
			
	}

	public Media( ){
		//Mock Data:
			m_functionCallCounts = new Dictionary<string, int>();
		if(!m_functionCallCounts.ContainsKey( "Void .ctor()" )){
			m_functionCallCounts.Add( "Void .ctor()", 0 );
		}
		m_functionCallCounts["Void .ctor()"]++;
			
	}

	public System.Boolean isReadyToPlay {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_isReadyToPlay" )){
				m_functionCallCounts.Add( "get_isReadyToPlay", 0 );
			}
			m_functionCallCounts["get_isReadyToPlay"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean isOk {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_isOk" )){
				m_functionCallCounts.Add( "get_isOk", 0 );
			}
			m_functionCallCounts["get_isOk"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean isLooping {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_isLooping" )){
				m_functionCallCounts.Add( "get_isLooping", 0 );
			}
			m_functionCallCounts["get_isLooping"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.Texture video {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_video" )){
				m_functionCallCounts.Add( "get_video", 0 );
			}
			m_functionCallCounts["get_video"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Single bufferDuration {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_bufferDuration" )){
				m_functionCallCounts.Add( "get_bufferDuration", 0 );
			}
			m_functionCallCounts["get_bufferDuration"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Int32 error {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_error" )){
				m_functionCallCounts.Add( "get_error", 0 );
			}
			m_functionCallCounts["get_error"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.String url {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_url" )){
				m_functionCallCounts.Add( "get_url", 0 );
			}
			m_functionCallCounts["get_url"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_url" )){
				m_functionCallCounts.Add( "set_url", 0 );
			}
			m_functionCallCounts["set_url"]++;
			
		}
	}

	public System.Boolean isPlaying {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_isPlaying" )){
				m_functionCallCounts.Add( "get_isPlaying", 0 );
			}
			m_functionCallCounts["get_isPlaying"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.AudioSource audioSource {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_audioSource" )){
				m_functionCallCounts.Add( "get_audioSource", 0 );
			}
			m_functionCallCounts["get_audioSource"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_audioSource" )){
				m_functionCallCounts.Add( "set_audioSource", 0 );
			}
			m_functionCallCounts["set_audioSource"]++;
			
		}
	}

	public System.Boolean isDone {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_isDone" )){
				m_functionCallCounts.Add( "get_isDone", 0 );
			}
			m_functionCallCounts["get_isDone"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean isPaused {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_isPaused" )){
				m_functionCallCounts.Add( "get_isPaused", 0 );
			}
			m_functionCallCounts["get_isPaused"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.String errorMessage {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_errorMessage" )){
				m_functionCallCounts.Add( "get_errorMessage", 0 );
			}
			m_functionCallCounts["get_errorMessage"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean hasAudio {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_hasAudio" )){
				m_functionCallCounts.Add( "get_hasAudio", 0 );
			}
			m_functionCallCounts["get_hasAudio"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Single prebufferDuration {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_prebufferDuration" )){
				m_functionCallCounts.Add( "get_prebufferDuration", 0 );
			}
			m_functionCallCounts["get_prebufferDuration"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_prebufferDuration" )){
				m_functionCallCounts.Add( "set_prebufferDuration", 0 );
			}
			m_functionCallCounts["set_prebufferDuration"]++;
			
		}
	}

	public System.Single duration {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_duration" )){
				m_functionCallCounts.Add( "get_duration", 0 );
			}
			m_functionCallCounts["get_duration"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.AudioClip audio {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_audio" )){
				m_functionCallCounts.Add( "get_audio", 0 );
			}
			m_functionCallCounts["get_audio"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Boolean hasVideo {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_hasVideo" )){
				m_functionCallCounts.Add( "get_hasVideo", 0 );
			}
			m_functionCallCounts["get_hasVideo"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.Single maxBufferSize {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_maxBufferSize" )){
				m_functionCallCounts.Add( "get_maxBufferSize", 0 );
			}
			m_functionCallCounts["get_maxBufferSize"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_maxBufferSize" )){
				m_functionCallCounts.Add( "set_maxBufferSize", 0 );
			}
			m_functionCallCounts["set_maxBufferSize"]++;
			
		}
	}
}
}
