using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;


namespace UnityEngine {
public struct Ray {
	// Mock data:
	private Dictionary<string, int> m_functionCallCounts;
	public Dictionary<string, int> FunctionCallCounts {
		get { 
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			return m_functionCallCounts;
		}
	}

	public UnityEngine.Vector3 GetPoint( System.Single distance ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Vector3 GetPoint(Single)" )){
			m_functionCallCounts.Add( "Vector3 GetPoint(Single)", 0 );
		}
		m_functionCallCounts["Vector3 GetPoint(Single)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public override System.String ToString( ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "System.String ToString()" )){
			m_functionCallCounts.Add( "System.String ToString()", 0 );
		}
		m_functionCallCounts["System.String ToString()"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public Ray( UnityEngine.Vector3 origin, UnityEngine.Vector3 direction ){
		//Mock Data:
			m_functionCallCounts = new Dictionary<string, int>();
		if(!m_functionCallCounts.ContainsKey( "Void .ctor(Vector3, Vector3)" )){
			m_functionCallCounts.Add( "Void .ctor(Vector3, Vector3)", 0 );
		}
		m_functionCallCounts["Void .ctor(Vector3, Vector3)"]++;
			
	}

	public UnityEngine.Vector3 direction {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_direction" )){
				m_functionCallCounts.Add( "get_direction", 0 );
			}
			m_functionCallCounts["get_direction"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_direction" )){
				m_functionCallCounts.Add( "set_direction", 0 );
			}
			m_functionCallCounts["set_direction"]++;
			
		}
	}

	public UnityEngine.Vector3 origin {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_origin" )){
				m_functionCallCounts.Add( "get_origin", 0 );
			}
			m_functionCallCounts["get_origin"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_origin" )){
				m_functionCallCounts.Add( "set_origin", 0 );
			}
			m_functionCallCounts["set_origin"]++;
			
		}
	}
}
}
