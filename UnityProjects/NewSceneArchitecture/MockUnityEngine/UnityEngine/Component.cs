using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;


namespace UnityEngine {
public class Component : UnityEngine.Object {
	// Mock data:
	private Dictionary<string, int> m_functionCallCounts;
	public Dictionary<string, int> FunctionCallCounts {
		get { 
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			return m_functionCallCounts;
		}
	}

	public UnityEngine.Component GetComponent( System.Type type ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "UnityEngine.Component GetComponent(System.Type)" )){
			m_functionCallCounts.Add( "UnityEngine.Component GetComponent(System.Type)", 0 );
		}
		m_functionCallCounts["UnityEngine.Component GetComponent(System.Type)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public UnityEngine.Component GetComponent( System.String type ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "UnityEngine.Component GetComponent(System.String)" )){
			m_functionCallCounts.Add( "UnityEngine.Component GetComponent(System.String)", 0 );
		}
		m_functionCallCounts["UnityEngine.Component GetComponent(System.String)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public UnityEngine.Component GetComponentInChildren( System.Type t ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "UnityEngine.Component GetComponentInChildren(System.Type)" )){
			m_functionCallCounts.Add( "UnityEngine.Component GetComponentInChildren(System.Type)", 0 );
		}
		m_functionCallCounts["UnityEngine.Component GetComponentInChildren(System.Type)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public UnityEngine.Component[] GetComponentsInChildren( System.Type t ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "UnityEngine.Component[] GetComponentsInChildren(System.Type)" )){
			m_functionCallCounts.Add( "UnityEngine.Component[] GetComponentsInChildren(System.Type)", 0 );
		}
		m_functionCallCounts["UnityEngine.Component[] GetComponentsInChildren(System.Type)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public UnityEngine.Component[] GetComponentsInChildren( System.Type t, System.Boolean includeInactive ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "UnityEngine.Component[] GetComponentsInChildren(System.Type, Boolean)" )){
			m_functionCallCounts.Add( "UnityEngine.Component[] GetComponentsInChildren(System.Type, Boolean)", 0 );
		}
		m_functionCallCounts["UnityEngine.Component[] GetComponentsInChildren(System.Type, Boolean)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public UnityEngine.Component[] GetComponents( System.Type type ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "UnityEngine.Component[] GetComponents(System.Type)" )){
			m_functionCallCounts.Add( "UnityEngine.Component[] GetComponents(System.Type)", 0 );
		}
		m_functionCallCounts["UnityEngine.Component[] GetComponents(System.Type)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public System.Boolean CompareTag( System.String tag ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Boolean CompareTag(System.String)" )){
			m_functionCallCounts.Add( "Boolean CompareTag(System.String)", 0 );
		}
		m_functionCallCounts["Boolean CompareTag(System.String)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public void SendMessageUpwards( System.String methodName, System.Object value, UnityEngine.SendMessageOptions options ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void SendMessageUpwards(System.String, System.Object, SendMessageOptions)" )){
			m_functionCallCounts.Add( "Void SendMessageUpwards(System.String, System.Object, SendMessageOptions)", 0 );
		}
		m_functionCallCounts["Void SendMessageUpwards(System.String, System.Object, SendMessageOptions)"]++;
			
	}

	public void SendMessageUpwards( System.String methodName, System.Object value ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void SendMessageUpwards(System.String, System.Object)" )){
			m_functionCallCounts.Add( "Void SendMessageUpwards(System.String, System.Object)", 0 );
		}
		m_functionCallCounts["Void SendMessageUpwards(System.String, System.Object)"]++;
			
	}

	public void SendMessageUpwards( System.String methodName ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void SendMessageUpwards(System.String)" )){
			m_functionCallCounts.Add( "Void SendMessageUpwards(System.String)", 0 );
		}
		m_functionCallCounts["Void SendMessageUpwards(System.String)"]++;
			
	}

	public void SendMessageUpwards( System.String methodName, UnityEngine.SendMessageOptions options ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void SendMessageUpwards(System.String, SendMessageOptions)" )){
			m_functionCallCounts.Add( "Void SendMessageUpwards(System.String, SendMessageOptions)", 0 );
		}
		m_functionCallCounts["Void SendMessageUpwards(System.String, SendMessageOptions)"]++;
			
	}

	public void SendMessage( System.String methodName, System.Object value, UnityEngine.SendMessageOptions options ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void SendMessage(System.String, System.Object, SendMessageOptions)" )){
			m_functionCallCounts.Add( "Void SendMessage(System.String, System.Object, SendMessageOptions)", 0 );
		}
		m_functionCallCounts["Void SendMessage(System.String, System.Object, SendMessageOptions)"]++;
			
	}

	public void SendMessage( System.String methodName, System.Object value ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void SendMessage(System.String, System.Object)" )){
			m_functionCallCounts.Add( "Void SendMessage(System.String, System.Object)", 0 );
		}
		m_functionCallCounts["Void SendMessage(System.String, System.Object)"]++;
			
	}

	public void SendMessage( System.String methodName ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void SendMessage(System.String)" )){
			m_functionCallCounts.Add( "Void SendMessage(System.String)", 0 );
		}
		m_functionCallCounts["Void SendMessage(System.String)"]++;
			
	}

	public void SendMessage( System.String methodName, UnityEngine.SendMessageOptions options ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void SendMessage(System.String, SendMessageOptions)" )){
			m_functionCallCounts.Add( "Void SendMessage(System.String, SendMessageOptions)", 0 );
		}
		m_functionCallCounts["Void SendMessage(System.String, SendMessageOptions)"]++;
			
	}

	public void BroadcastMessage( System.String methodName, System.Object parameter, UnityEngine.SendMessageOptions options ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void BroadcastMessage(System.String, System.Object, SendMessageOptions)" )){
			m_functionCallCounts.Add( "Void BroadcastMessage(System.String, System.Object, SendMessageOptions)", 0 );
		}
		m_functionCallCounts["Void BroadcastMessage(System.String, System.Object, SendMessageOptions)"]++;
			
	}

	public void BroadcastMessage( System.String methodName, System.Object parameter ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void BroadcastMessage(System.String, System.Object)" )){
			m_functionCallCounts.Add( "Void BroadcastMessage(System.String, System.Object)", 0 );
		}
		m_functionCallCounts["Void BroadcastMessage(System.String, System.Object)"]++;
			
	}

	public void BroadcastMessage( System.String methodName ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void BroadcastMessage(System.String)" )){
			m_functionCallCounts.Add( "Void BroadcastMessage(System.String)", 0 );
		}
		m_functionCallCounts["Void BroadcastMessage(System.String)"]++;
			
	}

	public void BroadcastMessage( System.String methodName, UnityEngine.SendMessageOptions options ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Void BroadcastMessage(System.String, SendMessageOptions)" )){
			m_functionCallCounts.Add( "Void BroadcastMessage(System.String, SendMessageOptions)", 0 );
		}
		m_functionCallCounts["Void BroadcastMessage(System.String, SendMessageOptions)"]++;
			
	}

	public Component( ){
		//Mock Data:
			m_functionCallCounts = new Dictionary<string, int>();
		if(!m_functionCallCounts.ContainsKey( "Void .ctor()" )){
			m_functionCallCounts.Add( "Void .ctor()", 0 );
		}
		m_functionCallCounts["Void .ctor()"]++;
			
	}

	public UnityEngine.GameObject gameObject {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_gameObject" )){
				m_functionCallCounts.Add( "get_gameObject", 0 );
			}
			m_functionCallCounts["get_gameObject"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.GUIElement guiElement {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_guiElement" )){
				m_functionCallCounts.Add( "get_guiElement", 0 );
			}
			m_functionCallCounts["get_guiElement"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.Camera camera {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_camera" )){
				m_functionCallCounts.Add( "get_camera", 0 );
			}
			m_functionCallCounts["get_camera"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.Rigidbody rigidbody {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_rigidbody" )){
				m_functionCallCounts.Add( "get_rigidbody", 0 );
			}
			m_functionCallCounts["get_rigidbody"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.Transform transform {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_transform" )){
				m_functionCallCounts.Add( "get_transform", 0 );
			}
			m_functionCallCounts["get_transform"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.NetworkView networkView {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_networkView" )){
				m_functionCallCounts.Add( "get_networkView", 0 );
			}
			m_functionCallCounts["get_networkView"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.GUITexture guiTexture {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_guiTexture" )){
				m_functionCallCounts.Add( "get_guiTexture", 0 );
			}
			m_functionCallCounts["get_guiTexture"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.Light light {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_light" )){
				m_functionCallCounts.Add( "get_light", 0 );
			}
			m_functionCallCounts["get_light"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.GUIText guiText {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_guiText" )){
				m_functionCallCounts.Add( "get_guiText", 0 );
			}
			m_functionCallCounts["get_guiText"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.Collider collider {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_collider" )){
				m_functionCallCounts.Add( "get_collider", 0 );
			}
			m_functionCallCounts["get_collider"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.ConstantForce constantForce {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_constantForce" )){
				m_functionCallCounts.Add( "get_constantForce", 0 );
			}
			m_functionCallCounts["get_constantForce"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.ParticleEmitter particleEmitter {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_particleEmitter" )){
				m_functionCallCounts.Add( "get_particleEmitter", 0 );
			}
			m_functionCallCounts["get_particleEmitter"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.Animation animation {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_animation" )){
				m_functionCallCounts.Add( "get_animation", 0 );
			}
			m_functionCallCounts["get_animation"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.HingeJoint hingeJoint {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_hingeJoint" )){
				m_functionCallCounts.Add( "get_hingeJoint", 0 );
			}
			m_functionCallCounts["get_hingeJoint"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.AudioSource audio {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_audio" )){
				m_functionCallCounts.Add( "get_audio", 0 );
			}
			m_functionCallCounts["get_audio"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public System.String tag {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_tag" )){
				m_functionCallCounts.Add( "get_tag", 0 );
			}
			m_functionCallCounts["get_tag"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_tag" )){
				m_functionCallCounts.Add( "set_tag", 0 );
			}
			m_functionCallCounts["set_tag"]++;
			
		}
	}

	public System.Boolean active {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_active" )){
				m_functionCallCounts.Add( "get_active", 0 );
			}
			m_functionCallCounts["get_active"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_active" )){
				m_functionCallCounts.Add( "set_active", 0 );
			}
			m_functionCallCounts["set_active"]++;
			
		}
	}

	public UnityEngine.Renderer renderer {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_renderer" )){
				m_functionCallCounts.Add( "get_renderer", 0 );
			}
			m_functionCallCounts["get_renderer"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}
}
}
