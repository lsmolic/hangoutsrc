using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;


namespace UnityEngine {
public class Collider : UnityEngine.Component {
	// Mock data:
	private Dictionary<string, int> m_functionCallCounts;
	public Dictionary<string, int> FunctionCallCounts {
		get { 
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			return m_functionCallCounts;
		}
	}

	public UnityEngine.Vector3 ClosestPointOnBounds( UnityEngine.Vector3 position ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Vector3 ClosestPointOnBounds(Vector3)" )){
			m_functionCallCounts.Add( "Vector3 ClosestPointOnBounds(Vector3)", 0 );
		}
		m_functionCallCounts["Vector3 ClosestPointOnBounds(Vector3)"]++;
			
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public System.Boolean Raycast( UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, System.Single distance ){
		//Mock Data:
		if(m_functionCallCounts == null) {
			m_functionCallCounts = new Dictionary<string, int>();
		}
		if(!m_functionCallCounts.ContainsKey( "Boolean Raycast(Ray, RaycastHit ByRef, Single)" )){
			m_functionCallCounts.Add( "Boolean Raycast(Ray, RaycastHit ByRef, Single)", 0 );
		}
		m_functionCallCounts["Boolean Raycast(Ray, RaycastHit ByRef, Single)"]++;
			
		hitInfo = default(UnityEngine.RaycastHit);
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public Collider( ){
		//Mock Data:
			m_functionCallCounts = new Dictionary<string, int>();
		if(!m_functionCallCounts.ContainsKey( "Void .ctor()" )){
			m_functionCallCounts.Add( "Void .ctor()", 0 );
		}
		m_functionCallCounts["Void .ctor()"]++;
			
	}

	public UnityEngine.Bounds bounds {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_bounds" )){
				m_functionCallCounts.Add( "get_bounds", 0 );
			}
			m_functionCallCounts["get_bounds"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.Rigidbody attachedRigidbody {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_attachedRigidbody" )){
				m_functionCallCounts.Add( "get_attachedRigidbody", 0 );
			}
			m_functionCallCounts["get_attachedRigidbody"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
	}

	public UnityEngine.PhysicMaterial sharedMaterial {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_sharedMaterial" )){
				m_functionCallCounts.Add( "get_sharedMaterial", 0 );
			}
			m_functionCallCounts["get_sharedMaterial"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_sharedMaterial" )){
				m_functionCallCounts.Add( "set_sharedMaterial", 0 );
			}
			m_functionCallCounts["set_sharedMaterial"]++;
			
		}
	}

	public System.Boolean isTrigger {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_isTrigger" )){
				m_functionCallCounts.Add( "get_isTrigger", 0 );
			}
			m_functionCallCounts["get_isTrigger"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_isTrigger" )){
				m_functionCallCounts.Add( "set_isTrigger", 0 );
			}
			m_functionCallCounts["set_isTrigger"]++;
			
		}
	}

	public UnityEngine.PhysicMaterial material {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_material" )){
				m_functionCallCounts.Add( "get_material", 0 );
			}
			m_functionCallCounts["get_material"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_material" )){
				m_functionCallCounts.Add( "set_material", 0 );
			}
			m_functionCallCounts["set_material"]++;
			
		}
	}
}
}
