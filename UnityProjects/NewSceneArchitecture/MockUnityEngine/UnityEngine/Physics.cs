using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;


namespace UnityEngine {
public class Physics {
	// Mock data:
	private Dictionary<string, int> m_functionCallCounts;
	public Dictionary<string, int> FunctionCallCounts {
		get { 
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			return m_functionCallCounts;
		}
	}

	public static System.Boolean Raycast( UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single distance ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Raycast( UnityEngine.Vector3 origin, UnityEngine.Vector3 direction ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Raycast( UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single distance, System.Int32 layerMask ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Raycast( UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, System.Single distance ){
		hitInfo = default(UnityEngine.RaycastHit);
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Raycast( UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo ){
		hitInfo = default(UnityEngine.RaycastHit);
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Raycast( UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, out UnityEngine.RaycastHit hitInfo, System.Single distance, System.Int32 layerMask ){
		hitInfo = default(UnityEngine.RaycastHit);
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Raycast( UnityEngine.Ray ray, System.Single distance ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Raycast( UnityEngine.Ray ray ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Raycast( UnityEngine.Ray ray, System.Single distance, System.Int32 layerMask ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Raycast( UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, System.Single distance ){
		hitInfo = default(UnityEngine.RaycastHit);
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Raycast( UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo ){
		hitInfo = default(UnityEngine.RaycastHit);
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Raycast( UnityEngine.Ray ray, out UnityEngine.RaycastHit hitInfo, System.Single distance, System.Int32 layerMask ){
		hitInfo = default(UnityEngine.RaycastHit);
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static UnityEngine.RaycastHit[] RaycastAll( UnityEngine.Ray ray, System.Single distance ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static UnityEngine.RaycastHit[] RaycastAll( UnityEngine.Ray ray ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static UnityEngine.RaycastHit[] RaycastAll( UnityEngine.Ray ray, System.Single distance, System.Int32 layerMask ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static UnityEngine.RaycastHit[] RaycastAll( UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single distance, System.Int32 layermask ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static UnityEngine.RaycastHit[] RaycastAll( UnityEngine.Vector3 origin, UnityEngine.Vector3 direction, System.Single distance ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static UnityEngine.RaycastHit[] RaycastAll( UnityEngine.Vector3 origin, UnityEngine.Vector3 direction ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Linecast( UnityEngine.Vector3 start, UnityEngine.Vector3 end ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Linecast( UnityEngine.Vector3 start, UnityEngine.Vector3 end, System.Int32 layerMask ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Linecast( UnityEngine.Vector3 start, UnityEngine.Vector3 end, out UnityEngine.RaycastHit hitInfo ){
		hitInfo = default(UnityEngine.RaycastHit);
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean Linecast( UnityEngine.Vector3 start, UnityEngine.Vector3 end, out UnityEngine.RaycastHit hitInfo, System.Int32 layerMask ){
		hitInfo = default(UnityEngine.RaycastHit);
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static UnityEngine.Collider[] OverlapSphere( UnityEngine.Vector3 position, System.Single radius, System.Int32 layerMask ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static UnityEngine.Collider[] OverlapSphere( UnityEngine.Vector3 position, System.Single radius ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean CheckSphere( UnityEngine.Vector3 position, System.Single radius, System.Int32 layerMask ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean CheckSphere( UnityEngine.Vector3 position, System.Single radius ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean CheckCapsule( UnityEngine.Vector3 start, UnityEngine.Vector3 end, System.Single radius, System.Int32 layermask ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static System.Boolean CheckCapsule( UnityEngine.Vector3 start, UnityEngine.Vector3 end, System.Single radius ){
		throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
	}

	public static void IgnoreCollision( UnityEngine.Collider collider1, UnityEngine.Collider collider2, System.Boolean ignore ){
	}

	public static void IgnoreCollision( UnityEngine.Collider collider1, UnityEngine.Collider collider2 ){
	}

	public Physics( ){
		//Mock Data:
			m_functionCallCounts = new Dictionary<string, int>();
		if(!m_functionCallCounts.ContainsKey( "Void .ctor()" )){
			m_functionCallCounts.Add( "Void .ctor()", 0 );
		}
		m_functionCallCounts["Void .ctor()"]++;
			
	}

	public static System.Single penetrationPenaltyForce {
		get {
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
		}
	}

	public static UnityEngine.Vector3 gravity {
		get {
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
		}
	}

	public static System.Single sleepAngularVelocity {
		get {
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
		}
	}

	public static System.Int32 solverIterationCount {
		get {
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
		}
	}

	public static System.Single maxAngularVelocity {
		get {
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
		}
	}

	public static System.Single bounceTreshold {
		get {
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
		}
	}

	public static System.Single sleepVelocity {
		get {
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
		}
	}

	public static System.Single minPenetrationForPenalty {
		get {
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
		}
	}

	public static System.Single bounceThreshold {
		get {
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
		}
	}
}
}
