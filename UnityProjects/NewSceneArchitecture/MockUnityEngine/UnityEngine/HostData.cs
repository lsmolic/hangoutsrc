using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;


namespace UnityEngine {
public class HostData {
	// Mock data:
	private Dictionary<string, int> m_functionCallCounts;
	public Dictionary<string, int> FunctionCallCounts {
		get { 
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			return m_functionCallCounts;
		}
	}

	public HostData( ){
		//Mock Data:
			m_functionCallCounts = new Dictionary<string, int>();
		if(!m_functionCallCounts.ContainsKey( "Void .ctor()" )){
			m_functionCallCounts.Add( "Void .ctor()", 0 );
		}
		m_functionCallCounts["Void .ctor()"]++;
			
	}

	public System.Int32 connectedPlayers {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_connectedPlayers" )){
				m_functionCallCounts.Add( "get_connectedPlayers", 0 );
			}
			m_functionCallCounts["get_connectedPlayers"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_connectedPlayers" )){
				m_functionCallCounts.Add( "set_connectedPlayers", 0 );
			}
			m_functionCallCounts["set_connectedPlayers"]++;
			
		}
	}

	public System.String gameName {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_gameName" )){
				m_functionCallCounts.Add( "get_gameName", 0 );
			}
			m_functionCallCounts["get_gameName"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_gameName" )){
				m_functionCallCounts.Add( "set_gameName", 0 );
			}
			m_functionCallCounts["set_gameName"]++;
			
		}
	}

	public System.String[] ip {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_ip" )){
				m_functionCallCounts.Add( "get_ip", 0 );
			}
			m_functionCallCounts["get_ip"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_ip" )){
				m_functionCallCounts.Add( "set_ip", 0 );
			}
			m_functionCallCounts["set_ip"]++;
			
		}
	}

	public System.String gameType {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_gameType" )){
				m_functionCallCounts.Add( "get_gameType", 0 );
			}
			m_functionCallCounts["get_gameType"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_gameType" )){
				m_functionCallCounts.Add( "set_gameType", 0 );
			}
			m_functionCallCounts["set_gameType"]++;
			
		}
	}

	public System.Int32 port {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_port" )){
				m_functionCallCounts.Add( "get_port", 0 );
			}
			m_functionCallCounts["get_port"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_port" )){
				m_functionCallCounts.Add( "set_port", 0 );
			}
			m_functionCallCounts["set_port"]++;
			
		}
	}

	public System.Int32 playerLimit {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_playerLimit" )){
				m_functionCallCounts.Add( "get_playerLimit", 0 );
			}
			m_functionCallCounts["get_playerLimit"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_playerLimit" )){
				m_functionCallCounts.Add( "set_playerLimit", 0 );
			}
			m_functionCallCounts["set_playerLimit"]++;
			
		}
	}

	public System.Boolean useNat {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_useNat" )){
				m_functionCallCounts.Add( "get_useNat", 0 );
			}
			m_functionCallCounts["get_useNat"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_useNat" )){
				m_functionCallCounts.Add( "set_useNat", 0 );
			}
			m_functionCallCounts["set_useNat"]++;
			
		}
	}

	public System.String comment {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_comment" )){
				m_functionCallCounts.Add( "get_comment", 0 );
			}
			m_functionCallCounts["get_comment"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_comment" )){
				m_functionCallCounts.Add( "set_comment", 0 );
			}
			m_functionCallCounts["set_comment"]++;
			
		}
	}

	public System.Boolean passwordProtected {
		get {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "get_passwordProtected" )){
				m_functionCallCounts.Add( "get_passwordProtected", 0 );
			}
			m_functionCallCounts["get_passwordProtected"]++;
			
			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}
		set {
			if(m_functionCallCounts == null) {
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if(!m_functionCallCounts.ContainsKey( "set_passwordProtected" )){
				m_functionCallCounts.Add( "set_passwordProtected", 0 );
			}
			m_functionCallCounts["set_passwordProtected"]++;
			
		}
	}
}
}
