using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;


namespace UnityEngine
{
	public struct Mathf
	{
		// Mock data:
		private Dictionary<string, int> m_functionCallCounts;
		public Dictionary<string, int> FunctionCallCounts
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				return m_functionCallCounts;
			}
		}

		public static System.Single Sin(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Cos(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Tan(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Asin(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Acos(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Atan(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Atan2(System.Single y, System.Single x)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Sqrt(System.Single f)
		{
			return (float)System.Math.Sqrt(f);
		}

		public static System.Single Abs(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Int32 Abs(System.Int32 value)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Min(System.Single a, System.Single b)
		{
			return (a > b ? b : a);
		}

		public static System.Int32 Min(System.Int32 a, System.Int32 b)
		{
			return (a > b ? b : a);
		}

		public static System.Single Max(System.Single a, System.Single b)
		{
			return (a > b ? a : b);
		}

		public static System.Int32 Max(System.Int32 a, System.Int32 b)
		{
			return (a > b ? a : b);
		}

		public static System.Single Pow(System.Single f, System.Single p)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Exp(System.Single power)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Log(System.Single f, System.Single p)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Log(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Log10(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Ceil(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Floor(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Round(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Int32 CeilToInt(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Int32 FloorToInt(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Int32 RoundToInt(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Sign(System.Single f)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Clamp(System.Single value, System.Single min, System.Single max)
		{
			float result = value;
			if( value < min )
			{
				result = min;
			}
			else if( value > max )
			{
				result = max;
			}
			return result;
		}

		public static System.Int32 Clamp(System.Int32 value, System.Int32 min, System.Int32 max)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Clamp01(System.Single value)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Lerp(System.Single a, System.Single b, System.Single t)
		{
			return ((b - a) * t) + a;
		}

		public static System.Single LerpAngle(System.Single a, System.Single b, System.Single t)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single SmoothStep(System.Single from, System.Single to, System.Single t)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Gamma(System.Single value, System.Single absmax, System.Single gamma)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Boolean Approximately(System.Single a, System.Single b)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single SmoothDamp(System.Single current, System.Single target, ref System.Single currentVelocity, System.Single smoothTime, System.Single maxSpeed)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single SmoothDamp(System.Single current, System.Single target, ref System.Single currentVelocity, System.Single smoothTime)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single SmoothDamp(System.Single current, System.Single target, ref System.Single currentVelocity, System.Single smoothTime, System.Single maxSpeed, System.Single deltaTime)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single SmoothDampAngle(System.Single current, System.Single target, ref System.Single currentVelocity, System.Single smoothTime, System.Single maxSpeed)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single SmoothDampAngle(System.Single current, System.Single target, ref System.Single currentVelocity, System.Single smoothTime)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single SmoothDampAngle(System.Single current, System.Single target, ref System.Single currentVelocity, System.Single smoothTime, System.Single maxSpeed, System.Single deltaTime)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single Repeat(System.Single t, System.Single length)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single PingPong(System.Single t, System.Single length)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single InverseLerp(System.Single from, System.Single to, System.Single value)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Int32 ClosestPowerOfTwo(System.Int32 value)
		{
			int valueTest = value;
			int shiftAmount = 0;
			while(valueTest != 0)
			{
				shiftAmount++;
				valueTest >>= shiftAmount;
			}

			return 0x01 << shiftAmount;
		}

		public static System.Single DeltaAngle(System.Single current, System.Single target)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static System.Single PerlinNoise(System.Single x, System.Single y)
		{

			throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
		}

		public static float Infinity
		{
			get { return float.PositiveInfinity; }
		}

		public static float PI
		{
			get { return 3.1415926535f; }
		}

		public static float Rad2Deg
		{
			get { return 360.0f / (2.0f * PI); }
		}

		public static float Deg2Rad
		{
			get { return (2.0f * PI) / 360.0f; }
		}
	}
}
