using System;
using System.Collections;
using System.Collections.Generic;
using System.Runtime.Serialization;


namespace UnityEngine
{
	public class Renderer : UnityEngine.Component
	{
		// Mock data:
		private Dictionary<string, int> m_functionCallCounts;
		public Dictionary<string, int> FunctionCallCounts
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				return m_functionCallCounts;
			}
		}

		public void Render(System.Int32 material)
		{
			//Mock Data:
			if (m_functionCallCounts == null)
			{
				m_functionCallCounts = new Dictionary<string, int>();
			}
			if (!m_functionCallCounts.ContainsKey("Void Render(Int32)"))
			{
				m_functionCallCounts.Add("Void Render(Int32)", 0);
			}
			m_functionCallCounts["Void Render(Int32)"]++;

		}

		public Renderer()
		{
			//Mock Data:
			m_functionCallCounts = new Dictionary<string, int>();
			if (!m_functionCallCounts.ContainsKey("Void .ctor()"))
			{
				m_functionCallCounts.Add("Void .ctor()", 0);
			}
			m_functionCallCounts["Void .ctor()"]++;

		}

		public UnityEngine.Vector4 lightmapTilingOffset
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("get_lightmapTilingOffset"))
				{
					m_functionCallCounts.Add("get_lightmapTilingOffset", 0);
				}
				m_functionCallCounts["get_lightmapTilingOffset"]++;

				throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			}
			set
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("set_lightmapTilingOffset"))
				{
					m_functionCallCounts.Add("set_lightmapTilingOffset", 0);
				}
				m_functionCallCounts["set_lightmapTilingOffset"]++;

			}
		}

		public UnityEngine.Bounds bounds
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("get_bounds"))
				{
					m_functionCallCounts.Add("get_bounds", 0);
				}
				m_functionCallCounts["get_bounds"]++;

				throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			}
		}

		public System.Int32 lightmapIndex
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("get_lightmapIndex"))
				{
					m_functionCallCounts.Add("get_lightmapIndex", 0);
				}
				m_functionCallCounts["get_lightmapIndex"]++;

				throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			}
			set
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("set_lightmapIndex"))
				{
					m_functionCallCounts.Add("set_lightmapIndex", 0);
				}
				m_functionCallCounts["set_lightmapIndex"]++;

			}
		}

		public UnityEngine.Material[] materials
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("get_materials"))
				{
					m_functionCallCounts.Add("get_materials", 0);
				}
				m_functionCallCounts["get_materials"]++;

				throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			}
			set
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("set_materials"))
				{
					m_functionCallCounts.Add("set_materials", 0);
				}
				m_functionCallCounts["set_materials"]++;

			}
		}

		public System.Boolean receiveShadows
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("get_receiveShadows"))
				{
					m_functionCallCounts.Add("get_receiveShadows", 0);
				}
				m_functionCallCounts["get_receiveShadows"]++;

				throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			}
			set
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("set_receiveShadows"))
				{
					m_functionCallCounts.Add("set_receiveShadows", 0);
				}
				m_functionCallCounts["set_receiveShadows"]++;

			}
		}

		public System.Boolean castShadows
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("get_castShadows"))
				{
					m_functionCallCounts.Add("get_castShadows", 0);
				}
				m_functionCallCounts["get_castShadows"]++;

				throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			}
			set
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("set_castShadows"))
				{
					m_functionCallCounts.Add("set_castShadows", 0);
				}
				m_functionCallCounts["set_castShadows"]++;

			}
		}

		public System.Boolean enabled
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("get_enabled"))
				{
					m_functionCallCounts.Add("get_enabled", 0);
				}
				m_functionCallCounts["get_enabled"]++;

				throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			}
			set
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("set_enabled"))
				{
					m_functionCallCounts.Add("set_enabled", 0);
				}
				m_functionCallCounts["set_enabled"]++;

			}
		}

		public UnityEngine.Material[] sharedMaterials
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("get_sharedMaterials"))
				{
					m_functionCallCounts.Add("get_sharedMaterials", 0);
				}
				m_functionCallCounts["get_sharedMaterials"]++;

				throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			}
			set
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("set_sharedMaterials"))
				{
					m_functionCallCounts.Add("set_sharedMaterials", 0);
				}
				m_functionCallCounts["set_sharedMaterials"]++;

			}
		}

		public UnityEngine.Material sharedMaterial
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("get_sharedMaterial"))
				{
					m_functionCallCounts.Add("get_sharedMaterial", 0);
				}
				m_functionCallCounts["get_sharedMaterial"]++;

				throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			}
			set
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("set_sharedMaterial"))
				{
					m_functionCallCounts.Add("set_sharedMaterial", 0);
				}
				m_functionCallCounts["set_sharedMaterial"]++;

			}
		}

		public UnityEngine.Material material
		{
			get
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("get_material"))
				{
					m_functionCallCounts.Add("get_material", 0);
				}
				m_functionCallCounts["get_material"]++;

				throw new NotImplementedException("This function was automatically generated by Mockery and has no real implementation yet.");
			}
			set
			{
				if (m_functionCallCounts == null)
				{
					m_functionCallCounts = new Dictionary<string, int>();
				}
				if (!m_functionCallCounts.ContainsKey("set_material"))
				{
					m_functionCallCounts.Add("set_material", 0);
				}
				m_functionCallCounts["set_material"]++;

			}
		}
	}
}
